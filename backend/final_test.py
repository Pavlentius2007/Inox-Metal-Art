#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏–º–ø–æ—Ä—Ç–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_file_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É uploads/materials
    uploads_dir = Path("uploads/materials")
    if uploads_dir.exists():
        files = list(uploads_dir.glob("*"))
        print(f"‚úÖ –ü–∞–ø–∫–∞ uploads/materials —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {len(files)} —Ñ–∞–π–ª–æ–≤")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ñ–∞–π–ª–æ–≤
        for i, file in enumerate(files[:5]):
            print(f"  {i+1}. {file.name}")
    else:
        print("‚ùå –ü–∞–ø–∫–∞ uploads/materials –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É Catalog
    catalog_dir = Path("../Catalog")
    if catalog_dir.exists():
        files = list(catalog_dir.glob("*"))
        print(f"‚úÖ –ü–∞–ø–∫–∞ Catalog —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {len(files)} —Ñ–∞–π–ª–æ–≤")
    else:
        print("‚ùå –ü–∞–ø–∫–∞ Catalog –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

def test_database_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüíæ –¢–µ—Å—Ç–∏—Ä—É—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        from app.core.database import SessionLocal, engine
        from app.models.material import Material
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        from app.core.database import Base
        Base.metadata.create_all(bind=engine)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
        db = SessionLocal()
        count = db.query(Material).count()
        print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞: {count} –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = db.query(Material.category).distinct().all()
        print(f"üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {[cat[0] for cat in categories]}")
        
        db.close()
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

def test_api_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API endpoints"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä—É—é API endpoints...")
    
    try:
        import requests
        
        # –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ endpoint
        response = requests.get("http://localhost:8000/api/v1/materials/")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ API /materials/ —Ä–∞–±–æ—Ç–∞–µ—Ç: {data.get('total', 0)} –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")
        else:
            print(f"‚ùå API /materials/ –æ—à–∏–±–∫–∞: {response.status_code}")
        
        # –¢–µ—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        response = requests.get("http://localhost:8000/api/v1/materials/categories")
        if response.status_code == 200:
            categories = response.json()
            print(f"‚úÖ API /categories —Ä–∞–±–æ—Ç–∞–µ—Ç: {len(categories)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        else:
            print(f"‚ùå API /categories –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except ImportError:
        print("‚ö†Ô∏è requests –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç API")
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python -m uvicorn app.main:app --reload")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –ò–ú–ü–û–†–¢–ê –ú–ê–¢–ï–†–ò–ê–õ–û–í")
    print("=" * 60)
    
    test_file_structure()
    test_database_connection()
    test_api_endpoints()
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python -m uvicorn app.main:app --reload")
    print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: http://localhost:3000/admin/import-materials")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: http://localhost:3000/materials")

if __name__ == "__main__":
    main()


