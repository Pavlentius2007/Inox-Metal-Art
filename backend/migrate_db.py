#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from app.core.database import engine
from sqlalchemy import text

def migrate_database():
    try:
        print("–ú–∏–≥—Ä–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
        
        with engine.connect() as conn:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ videos
            result = conn.execute(text("PRAGMA table_info(products)"))
            columns = [row[1] for row in result]  # row[1] - —ç—Ç–æ –∏–º—è –∫–æ–ª–æ–Ω–∫–∏
            print(f"–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏: {columns}")
            
            if 'videos' not in columns:
                print("–î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É videos...")
                conn.execute(text("ALTER TABLE products ADD COLUMN videos TEXT"))
                conn.commit()
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ videos –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            else:
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ videos —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–ª–æ–Ω–∫–∏
            required_columns = ['features', 'images', 'specifications', 'detailed']
            for col in required_columns:
                if col not in columns:
                    print(f"–î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É {col}...")
                    conn.execute(text(f"ALTER TABLE products ADD COLUMN {col} TEXT"))
                    conn.commit()
                    print(f"‚úÖ –ö–æ–ª–æ–Ω–∫–∞ {col} –¥–æ–±–∞–≤–ª–µ–Ω–∞")
                else:
                    print(f"‚úÖ –ö–æ–ª–æ–Ω–∫–∞ {col} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    
        print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    migrate_database()

