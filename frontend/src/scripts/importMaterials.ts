// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å —Å–∞–π—Ç–∞ inoxmetalart.com
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å importAllMaterials()

interface MaterialData {
  name: string;
  description: string;
  category: string;
  file_type: string;
  file_size: string;
  file_path: string;
  download_url: string;
  tags: string[];
  is_active: boolean;
  sort_order: number;
  is_featured: boolean;
}

// –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å —Å–∞–π—Ç–∞ inoxmetalart.com
const inoxMetalArtMaterials: MaterialData[] = [
  {
    name: "–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ InoxMetalArt 2024",
    description: "–ü–æ–ª–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –∏ —Ü–µ–Ω–∞–º–∏",
    category: "catalogs",
    file_type: "PDF",
    file_size: "15.2 MB",
    file_path: "uploads/materials/catalog_2024.pdf",
    download_url: "uploads/materials/catalog_2024.pdf",
    tags: ["–∫–∞—Ç–∞–ª–æ–≥", "–ø—Ä–æ–¥—É–∫—Ü–∏—è", "2024", "—Ü–µ–Ω—ã", "—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏"],
    is_active: true,
    sort_order: 1,
    is_featured: true
  },
  {
    name: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –Ω–µ—Ä–∂–∞–≤–µ—é—â–µ–π —Å—Ç–∞–ª–∏",
    description: "–ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≤—Å–µ—Ö –º–∞—Ä–æ–∫ –Ω–µ—Ä–∂–∞–≤–µ—é—â–µ–π —Å—Ç–∞–ª–∏",
    category: "specifications",
    file_type: "PDF",
    file_size: "8.7 MB",
    download_url: "uploads/materials/steel_specs.pdf",
    file_path: "uploads/materials/steel_specs.pdf",
    tags: ["—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏", "–Ω–µ—Ä–∂–∞–≤–µ—é—â–∞—è —Å—Ç–∞–ª—å", "–º–∞—Ä–∫–∏", "—Å–≤–æ–π—Å—Ç–≤–∞"],
    is_active: true,
    sort_order: 2,
    is_featured: true
  },
  {
    name: "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∫–∞—á–µ—Å—Ç–≤–∞ ISO 9001",
    description: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∫–∞—á–µ—Å—Ç–≤–∞ ISO 9001:2015",
    category: "certificates",
    file_type: "PDF",
    file_size: "2.1 MB",
    download_url: "uploads/materials/iso_9001.pdf",
    file_path: "uploads/materials/iso_9001.pdf",
    tags: ["—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç", "–∫–∞—á–µ—Å—Ç–≤–æ", "ISO 9001", "2015"],
    is_active: true,
    sort_order: 3,
    is_featured: false
  },
  {
    name: "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –º–æ–Ω—Ç–∞–∂—É –ª–∏—Ñ—Ç–æ–≤—ã—Ö –ø–∞–Ω–µ–ª–µ–π",
    description: "–ü–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –º–æ–Ω—Ç–∞–∂—É –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ª–∏—Ñ—Ç–æ–≤—ã—Ö –ø–∞–Ω–µ–ª–µ–π",
    category: "guides",
    file_type: "PDF",
    file_size: "12.5 MB",
    download_url: "uploads/materials/elevator_installation.pdf",
    file_path: "uploads/materials/elevator_installation.pdf",
    tags: ["—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ", "–º–æ–Ω—Ç–∞–∂", "–ª–∏—Ñ—Ç", "–ø–∞–Ω–µ–ª–∏", "—É—Å—Ç–∞–Ω–æ–≤–∫–∞"],
    is_active: true,
    sort_order: 4,
    is_featured: false
  },
  {
    name: "–ë—Ä–æ—à—é—Ä–∞ PVD –ø–æ–∫—Ä—ã—Ç–∏—è",
    description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±—Ä–æ—à—é—Ä–∞ –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ PVD –ø–æ–∫—Ä—ã—Ç–∏–π",
    category: "brochures",
    file_type: "PDF",
    file_size: "6.8 MB",
    download_url: "uploads/materials/pvd_brochure.pdf",
    file_path: "uploads/materials/pvd_brochure.pdf",
    tags: ["PVD", "–ø–æ–∫—Ä—ã—Ç–∏—è", "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è", "–±—Ä–æ—à—é—Ä–∞"],
    is_active: true,
    sort_order: 5,
    is_featured: false
  },
  {
    name: "–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ª–∏—Ñ—Ç–æ–≤",
    description: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –ª–∏—Ñ—Ç–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
    category: "standards",
    file_type: "PDF",
    file_size: "18.3 MB",
    download_url: "uploads/materials/elevator_safety_standards.pdf",
    file_path: "uploads/materials/elevator_safety_standards.pdf",
    tags: ["—Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã", "–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–ª–∏—Ñ—Ç—ã", "–º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ"],
    is_active: true,
    sort_order: 6,
    is_featured: false
  },
  {
    name: "–ö–∞—Ç–∞–ª–æ–≥ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π",
    description: "–ö–∞—Ç–∞–ª–æ–≥ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π –¥–ª—è –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞ –∏ —ç–∫—Å—Ç–µ—Ä—å–µ—Ä–∞",
    category: "catalogs",
    file_type: "PDF",
    file_size: "22.1 MB",
    download_url: "uploads/materials/decorative_panels.pdf",
    file_path: "uploads/materials/decorative_panels.pdf",
    tags: ["–¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏", "–∏–Ω—Ç–µ—Ä—å–µ—Ä", "—ç–∫—Å—Ç–µ—Ä—å–µ—Ä", "–¥–∏–∑–∞–π–Ω"],
    is_active: true,
    sort_order: 7,
    is_featured: false
  },
  {
    name: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–∞—Å–ø–æ—Ä—Ç –Ω–∞–Ω–æ–ø–æ–∫—Ä—ã—Ç–∏–π",
    description: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–∞—Å–ø–æ—Ä—Ç –Ω–∞–Ω–æ–ø–æ–∫—Ä—ã—Ç–∏–π NSR –∏ NAS",
    category: "specifications",
    file_type: "PDF",
    file_size: "4.6 MB",
    download_url: "uploads/materials/nano_coatings_passport.pdf",
    file_path: "uploads/materials/nano_coatings_passport.pdf",
    tags: ["–Ω–∞–Ω–æ–ø–æ–∫—Ä—ã—Ç–∏—è", "NSR", "NAS", "—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–∞—Å–ø–æ—Ä—Ç"],
    is_active: true,
    sort_order: 8,
    is_featured: false
  },
  {
    name: "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
    description: "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º",
    category: "certificates",
    file_type: "PDF",
    file_size: "1.8 MB",
    download_url: "uploads/materials/eco_certificate.pdf",
    file_path: "uploads/materials/eco_certificate.pdf",
    tags: ["—ç–∫–æ–ª–æ–≥–∏—è", "–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç", "—Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã"],
    is_active: true,
    sort_order: 9,
    is_featured: false
  },
  {
    name: "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Ö–æ–¥—É –∑–∞ –Ω–µ—Ä–∂–∞–≤–µ—é—â–µ–π —Å—Ç–∞–ª—å—é",
    description: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ö–æ–¥—É –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é –∏–∑–¥–µ–ª–∏–π –∏–∑ –Ω–µ—Ä–∂–∞–≤–µ—é—â–µ–π —Å—Ç–∞–ª–∏",
    category: "guides",
    file_type: "PDF",
    file_size: "9.4 MB",
    download_url: "uploads/materials/stainless_steel_care.pdf",
    file_path: "uploads/materials/stainless_steel_care.pdf",
    tags: ["—É—Ö–æ–¥", "–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ", "–Ω–µ—Ä–∂–∞–≤–µ—é—â–∞—è —Å—Ç–∞–ª—å", "–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"],
    is_active: true,
    sort_order: 10,
    is_featured: false
  }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
async function addMaterial(materialData: MaterialData): Promise<boolean> {
  try {
    console.log(`–î–æ–±–∞–≤–ª—è—é –º–∞—Ç–µ—Ä–∏–∞–ª: ${materialData.name}`);
    
    // –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const formData = new FormData();
    formData.append('name', materialData.name);
    formData.append('description', materialData.description);
    formData.append('category', materialData.category);
    formData.append('tags', JSON.stringify(materialData.tags));
    formData.append('sort_order', materialData.sort_order.toString());
    formData.append('is_featured', materialData.is_featured.toString());
    
    // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (—Ç–∞–∫ –∫–∞–∫ —É –Ω–∞—Å –Ω–µ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤)
    const emptyFile = new File([''], materialData.file_path.split('/').pop() || 'file.pdf', {
      type: 'application/pdf'
    });
    formData.append('file', emptyFile);
    
    const response = await fetch('http://localhost:8000/api/v1/materials/', {
      method: 'POST',
      body: formData
    });
    
    if (response.ok) {
      const result = await response.json();
      console.log(`‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª "${materialData.name}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω —Å ID: ${result.id}`);
      return true;
    } else {
      const error = await response.text();
      console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞ "${materialData.name}":`, error);
      return false;
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ "${materialData.name}":`, error);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
async function importAllMaterials(): Promise<void> {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞—é –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤...');
  console.log(`üìä –í—Å–µ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞: ${inoxMetalArtMaterials.length}`);
  
  let successCount = 0;
  let errorCount = 0;
  
  for (let i = 0; i < inoxMetalArtMaterials.length; i++) {
    const material = inoxMetalArtMaterials[i];
    console.log(`\nüìù [${i + 1}/${inoxMetalArtMaterials.length}] –ò–º–ø–æ—Ä—Ç–∏—Ä—É—é: ${material.name}`);
    
    const success = await addMaterial(material);
    
    if (success) {
      successCount++;
    } else {
      errorCount++;
    }
    
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    if (i < inoxMetalArtMaterials.length - 1) {
      await new Promise(resolve => setTimeout(resolve, 500));
    }
  }
  
  console.log('\nüéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${successCount}`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
  console.log(`üìä –í—Å–µ–≥–æ: ${inoxMetalArtMaterials.length}`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async function importMaterialsByCategory(category: string): Promise<void> {
  const filteredMaterials = inoxMetalArtMaterials.filter(m => m.category === category);
  
  if (filteredMaterials.length === 0) {
    console.log(`‚ùå –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category}" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
    return;
  }
  
  console.log(`üöÄ –ù–∞—á–∏–Ω–∞—é –∏–º–ø–æ—Ä—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category}"...`);
  console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: ${filteredMaterials.length}`);
  
  let successCount = 0;
  let errorCount = 0;
  
  for (let i = 0; i < filteredMaterials.length; i++) {
    const material = filteredMaterials[i];
    console.log(`\nüìù [${i + 1}/${filteredMaterials.length}] –ò–º–ø–æ—Ä—Ç–∏—Ä—É—é: ${material.name}`);
    
    const success = await addMaterial(material);
    
    if (success) {
      successCount++;
    } else {
      errorCount++;
    }
    
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    if (i < filteredMaterials.length - 1) {
      await new Promise(resolve => setTimeout(resolve, 500));
    }
  }
  
  console.log('\nüéâ –ò–º–ø–æ—Ä—Ç –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω!');
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${successCount}`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
  console.log(`üìä –í—Å–µ–≥–æ: ${filteredMaterials.length}`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
async function clearAllMaterials(): Promise<void> {
  if (!confirm('‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï –º–∞—Ç–µ—Ä–∏–∞–ª—ã? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!')) {
    console.log('‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
    return;
  }
  
  try {
    console.log('üóëÔ∏è –ù–∞—á–∏–Ω–∞—é –æ—á–∏—Å—Ç–∫—É –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    const response = await fetch('http://localhost:8000/api/v1/materials/');
    if (!response.ok) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤');
    }
    
    const data = await response.json();
    const materials = data.materials || [];
    
    if (materials.length === 0) {
      console.log('‚ÑπÔ∏è –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ${materials.length}`);
    
    let deletedCount = 0;
    let errorCount = 0;
    
    for (let i = 0; i < materials.length; i++) {
      const material = materials[i];
      console.log(`\nüóëÔ∏è [${i + 1}/${materials.length}] –£–¥–∞–ª—è—é: ${material.name}`);
      
      try {
        const deleteResponse = await fetch(`http://localhost:8000/api/v1/materials/${material.id}`, {
          method: 'DELETE'
        });
        
        if (deleteResponse.ok) {
          deletedCount++;
          console.log(`‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª "${material.name}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω`);
        } else {
          errorCount++;
          console.error(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞ "${material.name}"`);
        }
      } catch (error) {
        errorCount++;
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ "${material.name}":`, error);
      }
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
      if (i < materials.length - 1) {
        await new Promise(resolve => setTimeout(resolve, 300));
      }
    }
    
    console.log('\nüéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ: ${deletedCount}`);
    console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
    console.log(`üìä –í—Å–µ–≥–æ: ${materials.length}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
async function getMaterialsStats(): Promise<void> {
  try {
    console.log('üìä –ü–æ–ª—É—á–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤...');
    
    const response = await fetch('http://localhost:8000/api/v1/materials/');
    if (!response.ok) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É');
    }
    
    const data = await response.json();
    const materials = data.materials || [];
    
    console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:');
    console.log(`üìÅ –í—Å–µ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: ${materials.length}`);
    
    // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const categoryStats: { [key: string]: number } = {};
    materials.forEach(material => {
      categoryStats[material.category] = (categoryStats[material.category] || 0) + 1;
    });
    
    console.log('\nüìÇ –ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:');
    Object.entries(categoryStats).forEach(([category, count]) => {
      console.log(`  ‚Ä¢ ${category}: ${count}`);
    });
    
    // –ê–∫—Ç–∏–≤–Ω—ã–µ/–Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ
    const activeCount = materials.filter(m => m.is_active).length;
    const inactiveCount = materials.length - activeCount;
    console.log(`\n‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${activeCount}`);
    console.log(`‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: ${inactiveCount}`);
    
    // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ
    const featuredCount = materials.filter(m => m.is_featured).length;
    console.log(`‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö: ${featuredCount}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
(window as any).inoxMetalArtMaterialsImport = {
  importAllMaterials,
  importMaterialsByCategory,
  clearAllMaterials,
  getMaterialsStats,
  materials: inoxMetalArtMaterials
};

// –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö
console.log('üöÄ –ú–æ–¥—É–ª—å –∏–º–ø–æ—Ä—Ç–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ InoxMetalArt –∑–∞–≥—Ä—É–∂–µ–Ω!');
console.log('üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:');
console.log('  ‚Ä¢ inoxMetalArtMaterialsImport.importAllMaterials() - –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤');
console.log('  ‚Ä¢ inoxMetalArtMaterialsImport.importMaterialsByCategory(category) - –∏–º–ø–æ—Ä—Ç –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
console.log('  ‚Ä¢ inoxMetalArtMaterialsImport.clearAllMaterials() - –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤');
console.log('  ‚Ä¢ inoxMetalArtMaterialsImport.getMaterialsStats() - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤');
console.log('  ‚Ä¢ inoxMetalArtMaterialsImport.materials - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞');
console.log('\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: catalogs, specifications, certificates, guides, brochures, standards');
console.log('\nüí° –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: inoxMetalArtMaterialsImport.importAllMaterials()');


